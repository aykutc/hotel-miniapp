import { ExploreArray, RecommendedArray } from "data/data";

import Head from "next/head";
import React from "react";
import styles from "@/styles/Home.module.css";
import HomeMenu from "@/components/HomeComponents/HomeMenu";
import Explore from "@/components/HomeComponents/Explore";
import Favorites from "@/components/HomeComponents/Favorites";
import HeaderTitle from "@/components/HeaderTitle";
import Tabs from "@/components/Tabs";
import Stays from "@/components/HomeComponents/Stays";
import Search from "@/components/icons/Search";
import SearchBar from "@/components/SearchBar";
import Router from "next/router";
/* import dynamic from "next/dynamic";
const Favorites = dynamic(() => import("@/components/home/Favorites"), {});
  */

export async function getStaticProps() {
  return {
    props: {
      exploreArray: ExploreArray,
      recommendedArray: RecommendedArray,
    },
  };
}
function Home({ exploreArray, recommendedArray }) {
  const [activeMenu, setActiveMenu] = React.useState("Explore");
  const [user, setUser] = React.useState(null);
  React.useEffect(() => {
    console.log(document.getElementById("exploreContainer"));
    window.document?.getElementById("exploreContainer")?.scroll(0, 48);
  }, []);
  const generateUrl = (redirectUri) => {
    const url =
      "https://idp.kobilshift-app01-eotsr.shift.kobil.com/auth/realms/flutter/protocol/openid-connect/auth?client_id=test-openid&redirect_uri=" +
      redirectUri +
      "&scope=openid&response_type=code&response_mode=query&nonce=o3w1vsredlp";
    return url;
  };

  /*   React.useEffect(() => {
    const address =
      window.location.protocol + "//" + window.location.host + "/home";

    const urlParams = new URLSearchParams(window.location.href);
    const myParam = urlParams.get("code");
    if (myParam) {
      login(myParam, address, generateUrl(address));
    } else {
      checkLogin(generateUrl(address));
    }
  }, []); */

  const checkLogin = async (authAddress) => {
    const user = localStorage.getItem("user");

    if (user) {
      const userObj = JSON.parse(user);
      if (userObj.expire > new Date().getTime()) {
        userObj.name = userObj.name + " local";
        setUser(userObj);
        return;
      }
    }
    window.location.assign(authAddress);
  };
  const login = async (code, redirectUri, authAddress) => {
    var myHeaders = new Headers();
    myHeaders.append("Content-Type", "application/json");

    try {
      const response = await fetch("https://auth.hotel.westerops.com/login", {
        method: "POST",
        headers: myHeaders,
        body: JSON.stringify({
          code: code,
          redirectUrl: redirectUri,
        }),
      });
      console.log(response);
      if (!response.ok) {
        console.log("girdi");
        throw Error("a");
      }

      const result = await response.json();
      const userObj = result.data;
      userObj.expire = new Date().getTime() + 1 * 60 * 1000;
      localStorage.setItem("user", JSON.stringify(userObj));
      setUser(result.data);
    } catch (error) {
      console.log("error", error);
      window.location.assign(authAddress);
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Neom Hotels</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      {activeMenu === "Explore" && (
        <>
          <div className="header">
            <HeaderTitle>
              <div style={{ marginRight: 6 }}>HI</div>
              {user ? (
                user.name + ","
              ) : (
                <div
                  style={{
                    display: "flex",
                    justifyContent: "center",
                    alignItems: "center",
                  }}
                >
                  <div
                    className="shine"
                    style={{ width: 100, height: 16, marginLeft: 4 }}
                  ></div>
                </div>
              )}
            </HeaderTitle>
          </div>
          <div className="exploreContainer" id="exploreContainer">
            <div className="searchContainer">
              <div
                className="search"
                onClick={() => {
                  Router.push("/search");
                }}
              >
                <SearchBar></SearchBar>
              </div>
              <Explore
                exploreArray={exploreArray}
                recommendedArray={recommendedArray}
                user={user}
              ></Explore>
            </div>
            <div className="any"></div>
          </div>
        </>
      )}

      {activeMenu === "Favorites" && (
        <Favorites recommendedArray={recommendedArray} />
      )}
      {activeMenu === "Stays" && <Stays />}
      <div style={{ height: 100 }}></div>
      <HomeMenu
        activeMenu={activeMenu}
        setActiveMenu={setActiveMenu}
      ></HomeMenu>
      <style jsx>{`
        .search {
          padding-right: 24px;
        }

        .exploreContainer {
          position: relative;
          overflow: scroll;
          height: 95vh;

          /* transform: translateY(-200px); */
        }
        .searchContainer {
          /* background-color: yellow; */
        }
        .header {
          height: 58px;
          display: flex;
          align-items: center;
        }
        .any {
          height: 200px;
        }
      `}</style>
    </div>
  );
}

export default Home;
